name: Export Database Schema (Artifacts)
on:
  workflow_dispatch:

permissions:
  actions: read

jobs:
  export:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: export_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Load Environment Variables
        uses: xom9ikk/dotenv@v2.3.0
        with:
          path: ./.github/workflows/common-env
          load-mode: strict

      - name: Display Configuration
        run: |
          echo "Database: ${{ env.POSTGRES_HOST }}:${{ env.POSTGRES_PORT }}/${{ env.POSTGRES_DB }}"
          echo "Export Path: ${{ env.EXPORT_PATH }}"
          echo "Exclude Params: ${{ env.EXPORT_EXCLUDE_PARAMS }}"

      - name: Run Liquibase with Docker
        run: |
          echo "Using changelog: ${{ env.LIQUIBASE_CHANGELOG_FILE }}"
          
          docker run --rm \
            --network host \
            -v ${{ github.workspace }}/src/main/resources:/liquibase/changelog \
            ${{ env.LIQUIBASE_DOCKER_IMAGE }} \
            --changeLogFile=${{ env.LIQUIBASE_CHANGELOG_FILE }} \
            --username=${{ env.POSTGRES_USER }} \
            --password=${{ env.POSTGRES_PASSWORD }} \
            --url=jdbc:postgresql://${{ env.POSTGRES_HOST }}:${{ env.POSTGRES_PORT }}/${{ env.POSTGRES_DB }} \
            --driver=org.postgresql.Driver \
            --classpath=/liquibase/changelog \
            --log-level=${{ env.LIQUIBASE_LOG_LEVEL }} \
            update
          
          echo "===> Liquibase migrations completed!"

      - name: Export Database Schema
        env:
          PGHOST: ${{ env.POSTGRES_HOST }}
          PGUSER: ${{ env.POSTGRES_USER }}
          PGPASSWORD: ${{ env.POSTGRES_PASSWORD }}
          PGDATABASE: ${{ env.POSTGRES_DB }}
          PGPORT: ${{ env.POSTGRES_PORT }}
        run: |

          TIMESTAMP=$(date '+%Y%m%d-%H%M%S')
          OUTPUT_FILE="${{ env.EXPORT_FILE_PREFIX }}-${TIMESTAMP}.sql"
          LATEST_FILE="${{ env.EXPORT_FILE_PREFIX }}-latest.sql"
          
          mkdir -p ${{ env.EXPORT_PATH }}
          
          # Header TO BE IMPROVED -> NOW I ATTACH ONLY FEW INFO IN THE HEADER SQL
          cat > "${{ env.EXPORT_PATH }}/${OUTPUT_FILE}" << EOF
          -- Complete Database Snapshot
          -- Generated: $(date)
          EOF
          
          echo "==> Exporting schema..."
          pg_dump \
            -h ${{ env.POSTGRES_HOST }} \
            -p ${{ env.POSTGRES_PORT }} \
            -U ${{ env.POSTGRES_USER }} \
            -d ${{ env.POSTGRES_DB }} \
            --schema-only \
            --no-comments \
            --no-tablespaces \
            --no-owner \
            --no-privileges \
            ${{ env.EXPORT_EXCLUDE_PARAMS }} | \
          grep -v '^--' | \
          grep -v '^SET ' | \
          grep -v '^SELECT ' | \
          grep -v '^$' | \
          sed 's/^CREATE SCHEMA /CREATE SCHEMA IF NOT EXISTS /' \
          >> "${{ env.EXPORT_PATH }}/${OUTPUT_FILE}"
          
          echo "==> Adding data..."
          echo -e "\n-- DATA" >> "${{ env.EXPORT_PATH }}/${OUTPUT_FILE}"
          pg_dump \
            -h ${{ env.POSTGRES_HOST }} \
            -p ${{ env.POSTGRES_PORT }} \
            -U ${{ env.POSTGRES_USER }} \
            -d ${{ env.POSTGRES_DB }} \
            --data-only \
            --no-comments \
            ${{ env.EXPORT_EXCLUDE_PARAMS }} \
            --column-inserts | \
            grep "^INSERT" >> "${{ env.EXPORT_PATH }}/${OUTPUT_FILE}"
          
          # Create latest version
          cp "${{ env.EXPORT_PATH }}/${OUTPUT_FILE}" "${{ env.EXPORT_PATH }}/${LATEST_FILE}"
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: '${{ env.EXPORT_FILE_PREFIX }}-${{ github.run_number }}'
          path: ${{ env.EXPORT_PATH }}/*.sql
          retention-days: ${{ env.EXPORT_RETENTION_DAYS }}

      - name: Summary # TODO to be improved
        run: |
          echo "## Export Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Retention**: ${{ env.EXPORT_RETENTION_DAYS }} days" >> $GITHUB_STEP_SUMMARY
          echo "- **Excluded**: ${{ env.EXPORT_EXCLUDE_PARAMS }}" >> $GITHUB_STEP_SUMMARY
