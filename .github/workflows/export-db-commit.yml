name: Export Database Schema Commit Push (Liquibase)
on:
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  export:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: export_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Load Common Environment Variables
        uses: xom9ikk/dotenv@v2.3.0
        with:
          path: ./.github/workflows/common-env
          load-mode: strict


      - name: Setup Export DB
        env:
          PGHOST: ${{env.POSTGRES_HOST}}
          PGUSER: ${{env.POSTGRES_USER}}
          PGPASSWORD: ${{env.POSTGRES_PASSWORD}}
          PGDATABASE: ${{env.POSTGRES_DB}}
          PGPORT: ${{ job.services.postgres.ports[5432] }}
          # The mvn liquibase command does not work properly (fail to locate from path)
          # I choose to use a simple loop to take all SQL files from the folder where the SQL migration files might be located.
        run: |
          for sql_file in $(find ${{env.SQL_SOURCE_PATH}} -name "*.sql" -type f | sort); do
            psql -f "$sql_file"
          done

      - name: Export database schema
        run: |
          echo "==> Exporting database schema..."
          
          TIMESTAMP=$(date '+%Y%m%d-%H%M%S')
          OUTPUT_FILE="database-schema-${TIMESTAMP}.sql"
          
          echo "==> Exporting final table structures..."
          PGPASSWORD=${{ env.POSTGRES_PASSWORD}} pg_dump \
            -h ${{env.POSTGRES_HOST}} \
            -U ${{env.POSTGRES_USER}} \
            -d ${{env.POSTGRES_DB}} \
            --schema-only \
            --no-comments \
            --exclude-table=databasechangelog \
            --exclude-table=databasechangeloglock | \
            sed '/^SET /d; /^SELECT /d; /^--/d; /^$/d; /^ALTER TABLE.*OWNER/d' | \
            awk '/^CREATE TABLE/,/^);/ {print} /^ALTER TABLE.*ADD CONSTRAINT/ {print} /^CREATE.*INDEX/ {print}' > "$OUTPUT_FILE"
          
          echo "==> Exporting INSERT data..."
          echo -e "\n-- DATA" >> "$OUTPUT_FILE"
          PGPASSWORD=${{env.POSTGRES_PASSWORD}} pg_dump \
            -h ${{env.POSTGRES_HOST}} \
            -U ${{env.POSTGRES_USER }} \
            -d ${{env.POSTGRES_DB }} \
            --data-only \
            --exclude-table=databasechangelog \
            --exclude-table=databasechangeloglock \
            --column-inserts | \
            grep "^INSERT" >> "$OUTPUT_FILE"
          
          # --> Also create a "latest" version NOT NECESSARY PROBABLY
          cp "$OUTPUT_FILE" "database-schema-latest.sql"
          
          echo "==> Timestamped file: $OUTPUT_FILE ($(du -h $OUTPUT_FILE | cut -f1))"
          echo "==> Latest file: database-schema-latest.sql"

        # Might be necessary to fix (POC)
      - name: Prepare exports
        run: |
          mkdir -p ${{env.EXPORT_PATH}}
          
          mv database-schema-*.sql ${{env.EXPORT_PATH}}/
          
          echo "Files prepared in exports"
          echo "Exported files:"
          ls -la ${{env.EXPORT_PATH}}/
          
          # TO BE FIX          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add ${{env.EXPORT_PATH}}/
          
          if git diff --staged --quiet; then
            echo "No files to commit"
          else
            git commit -m "Schema snapshot $(date '+%Y-%m-%d %H:%M:%S')" && git push
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'database-schema-${{ github.run_number }}'
          path: ${{env.EXPORT_PATH}}/*.sql
          retention-days: ${{env.EXPORT_RETENTION_DAYS || '30' }}

