name: Export Database Schema

on:
  workflow_dispatch:

permissions:
  contents: write

env:
  POSTGRES_HOST: localhost
  POSTGRES_DB: export_db
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

  SQL_SOURCE_PATH: src/main/resources/db
  SQL_PATH: src/main/resources/db
  EXPORT_PATH: exports
  EXPORT_RETENTION_DAYS: 7

  MVN_SETTINGS: ./.github/workflows/settings.xml
  LIQUIBASE_CHANGELOG_FILE: src/main/resources/db/db-changelog-master.yml

jobs:
  export:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Load Common Environment Variables
        uses: xom9ikk/dotenv@v2.3.0
        with:
          path: ./.github/workflows/common-env
          load-mode: strict

      - name: Setup JDK (for Liquibase)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Debug and fix changelog
        run: |
          echo "📁 Current directory: $(pwd)"
          echo "📂 Database directory contents:"
          find $SQL_SOURCE_PATH -type f | head -10
          echo ""

          echo "📋 Master changelog content BEFORE fix:"
          cat "$LIQUIBASE_CHANGELOG_FILE" || echo "❌ Master changelog not found"
          echo ""

          # Fix absolute path in changelog if needed
          if grep -q 'path: "/db/changelog"' "$LIQUIBASE_CHANGELOG_FILE" 2>/dev/null; then
            echo "🔧 Fixing absolute path to relative path..."
            sed -i 's|path: "/db/changelog"|path: "db/changelog"|g' "$LIQUIBASE_CHANGELOG_FILE"
            echo "✅ Fixed path from '/db/changelog' to 'db/changelog'"
          else
            echo "ℹ️ Path looks correct or file not found"
          fi

          echo ""
          echo "📋 Master changelog content AFTER fix:"
          cat "$LIQUIBASE_CHANGELOG_FILE" || echo "❌ Master changelog not found"
          echo ""
          echo "📁 Changelog directory contents:"
          ls -la "$SQL_SOURCE_PATH/changelog" 2>/dev/null || echo "No changelog directory found"

      - name: Apply Liquibase migrations
        run: |
          echo "🔄 Applying Liquibase migrations..."
          echo "📋 Using changelog: $LIQUIBASE_CHANGELOG_FILE"

          mvn liquibase:update \
            -Dliquibase.changeLogFile="$LIQUIBASE_CHANGELOG_FILE" \
            -Dliquibase.url="jdbc:postgresql://$POSTGRES_HOST:5432/$POSTGRES_DB" \
            -Dliquibase.username="$POSTGRES_USER" \
            -Dliquibase.password="$POSTGRES_PASSWORD" \
            -Dliquibase.verbose=true

      - name: Export schema
        run: |
          TIMESTAMP=$(date '+%Y%m%d-%H%M%S')
          OUTPUT="database-schema-${TIMESTAMP}.sql"

          mkdir -p $EXPORT_PATH

          # Export schema
          PGPASSWORD=$POSTGRES_PASSWORD pg_dump -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_DB \
            --schema-only --no-comments \
            --exclude-table=databasechangelog --exclude-table=databasechangeloglock | \
            sed '/^SET /d; /^SELECT /d; /^--/d; /^$/d; /^ALTER TABLE.*OWNER/d' | \
            awk '/^CREATE TABLE/,/^);/ {print} /^ALTER TABLE.*ADD CONSTRAINT/ {print} /^CREATE.*INDEX/ {print}' > "$OUTPUT"

          # Export data
          echo -e "\n-- DATA" >> "$OUTPUT"
          PGPASSWORD=$POSTGRES_PASSWORD pg_dump -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_DB \
            --data-only --exclude-table=databasechangelog --exclude-table=databasechangeloglock \
            --column-inserts | grep "^INSERT" >> "$OUTPUT"

          mv "$OUTPUT" "$EXPORT_PATH/"

      - name: Prune old exports
        run: |
          echo "🧹 Cleaning exports older than $EXPORT_RETENTION_DAYS days"
          find $EXPORT_PATH -type f -mtime +$EXPORT_RETENTION_DAYS -print -delete

      - name: Commit and upload
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add $EXPORT_PATH/
          git commit -m "Database export $(date)" || true
          git push || true

      - uses: actions/upload-artifact@v4
        with:
          name: database-schema-${{ github.run_number }}
          path: ${{ env.EXPORT_PATH }}/*.sql
