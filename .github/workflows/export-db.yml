name: Export Database Schema
on:
  workflow_dispatch: 

jobs:
  export:
    env:
      VERSION: 4.0.0
      GITHUB_USERNAME: Mauro2888
      GITHUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
      MVN_SETTINGS: ./.github/workflows/settings.xml
      MVN_REPO: ~/.m2/repository
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: migration-db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Load Environment Variables
        uses: xom9ikk/dotenv@v2.3.0
        with:
          path: ./.github/workflows/common-env
          load-mode: strict
          
      - name: Setup JDK ${{ env.JAVA_DISTRIBUTION }} ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven
          check-latest: false
          
      - name: Wait for PostgreSQL
        run: |
          echo "⏳ Waiting for PostgreSQL..."
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "✅ PostgreSQL is ready!"
              break
            fi
            echo "Waiting... (attempt $i/30)"
            sleep 2
          done
          
      - name: Create target database
        run: |
          echo "🗄️ Creating target database..."
          PGPASSWORD=postgres psql -h localhost -U postgres -d migration-db -c "CREATE DATABASE stock_trading;" || echo "Database may already exist"
          
      - name: Debug project structure
        run: |
          echo "📁 Current directory: $(pwd)"
          echo "📂 Database files:"
          find src/main/resources/db -type f 2>/dev/null || echo "No db directory found"
          echo ""
          echo "📋 Master changelog:"
          cat src/main/resources/db/db-changelog-master.yml 2>/dev/null || echo "No master changelog found"
          
      - name: Test database connection
        run: |
          echo "🔌 Testing connection..."
          PGPASSWORD=postgres psql -h localhost -U postgres -d stock_trading -c "SELECT version();"
          
      - name: Apply Liquibase migrations
        run: |
          echo "🔄 Running Liquibase..."
          mvn -B --settings $MVN_SETTINGS liquibase:update \
            -Dliquibase.changeLogFile="src/main/resources/db/db-changelog-master.yml" \
            -Dliquibase.url="jdbc:postgresql://localhost:5432/stock_trading" \
            -Dliquibase.username="postgres" \
            -Dliquibase.password="postgres" \
            -Dliquibase.verbose=true
            
      - name: Export database schema
        run: |
          echo "📤 Exporting schema..."
          OUTPUT="database-schema.sql"
          
          PGPASSWORD=postgres pg_dump -h localhost -U postgres -d stock_trading \
            --schema-only \
            --no-comments \
            --no-owner \
            --no-privileges \
            --exclude-table=databasechangelog \
            --exclude-table=databasechangeloglock > $OUTPUT
            
          echo "✅ Export completed: $OUTPUT"
          echo "📊 File size: $(du -h $OUTPUT | cut -f1)"
          echo "📋 Lines: $(wc -l < $OUTPUT)"
          
      - name: Commit schema file
        run: |
          mkdir -p exports
          mv *.sql exports/
          
          if [ -f "exports/database-schema.sql" ]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add exports/
            
            if ! git diff --staged --quiet; then
              git commit -m "📄 Updated database schema $(date '+%Y-%m-%d %H:%M:%S')"
              git push
              echo "✅ Schema committed"
            else
              echo "ℹ️ No changes to commit"
            fi
          else
            echo "❌ Schema file not found!"
            ls -la exports/
          fi
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: database-schema-${{ github.run_number }}
          path: "exports/*.sql"
          retention-days: 30
        if: always()
