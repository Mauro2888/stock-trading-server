name: Export Database Schema (Direct SQL)
on:
  workflow_dispatch: 

permissions:
  contents: write
  actions: read

jobs:
  export:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: stock_trading
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
        
      - name: Wait for PostgreSQL
        run: |
          echo "⏳ Waiting for PostgreSQL..."
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "✅ PostgreSQL is ready!"
              break
            fi
            sleep 2
          done
          
      - name: Execute SQL files directly
        run: |
          echo "🔄 Executing SQL files..."
          
          # Find and execute all SQL files in order
          find src/main/resources/db -name "*.sql" -type f | sort | while read sql_file; do
            echo "📄 Executing: $sql_file"
            PGPASSWORD=postgres psql -h localhost -U postgres -d stock_trading -f "$sql_file"
          done
          
      - name: Export database schema
        run: |
          echo "📤 Exporting database schema with custom filtering..."
          
          OUTPUT_FILE="database-schema.sql"
          
          # Export complete final table structures (after all migrations)
          # Apply the same filtering as your local script
          echo "==> Exporting final table structures..."
          PGPASSWORD=postgres pg_dump -h localhost -U postgres -d stock_trading \
            --schema-only \
            --no-comments \
            --exclude-table=databasechangelog \
            --exclude-table=databasechangeloglock | \
            sed '/^SET /d; /^SELECT /d; /^--/d; /^$/d; /^ALTER TABLE.*OWNER/d' | \
            awk '/^CREATE TABLE/,/^);/ {print} /^ALTER TABLE.*ADD CONSTRAINT/ {print} /^CREATE.*INDEX/ {print}' > "$OUTPUT_FILE"
          
          # Export data INSERT statements
          echo "==> Exporting data..."
          echo -e "\n-- DATA" >> "$OUTPUT_FILE"
          PGPASSWORD=postgres pg_dump -h localhost -U postgres -d stock_trading \
            --data-only \
            --exclude-table=databasechangelog \
            --exclude-table=databasechangeloglock \
            --column-inserts | \
            grep "^INSERT" >> "$OUTPUT_FILE"
            
          echo "✅ Export completed with custom filtering!"
          echo "📊 File size: $(du -h $OUTPUT_FILE | cut -f1)"
          echo "📋 Lines: $(wc -l < $OUTPUT_FILE)"
          echo ""
          echo "🔍 First 10 lines:"
          head -10 "$OUTPUT_FILE"
          echo ""
          echo "🔍 Last 10 lines:"
          tail -10 "$OUTPUT_FILE"
          
      - name: Prepare exports
        run: |
          mkdir -p exports
          mv database-schema.sql exports/
          
          echo "✅ Files prepared in exports/"
          echo "📁 Exported files:"
          ls -la exports/
          
          # Show a preview of the final output
          echo ""
          echo "📋 Final export preview:"
          echo "--- First 15 lines ---"
          head -15 exports/database-schema.sql
          echo "--- Last 10 lines ---"
          tail -10 exports/database-schema.sql
          
          # Optional: Try to commit (will succeed if permissions are correct)
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add exports/
          
          if ! git diff --staged --quiet; then
            if git commit -m "📄 Database snapshot $(date '+%Y-%m-%d %H:%M:%S')"; then
              if git push; then
                echo "✅ Files committed and pushed to repository"
              else
                echo "⚠️ Commit successful but push failed - files available as artifact"
              fi
            else
              echo "⚠️ Commit failed - files available as artifact"
            fi
          else
            echo "ℹ️ No changes to commit"
          fi
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: database-snapshot-${{ github.run_number }}
          path: "exports/*.sql"
          retention-days: 30
